@using Models

<EditForm Model="@colorForm" OnValidSubmit="doSubmitColor">

  <DataAnnotationsValidator />
  <ValidationSummary />

  <label>
    Name:
    <InputText @bind-Value="colorForm.Name" />
    <ValidationMessage For=@(() => colorForm.Name) style="display:inline" />
  </label>
  <label>
    Hexcode:
    <InputText @bind-Value="colorForm.Hexcode" />
    <ValidationMessage For=@(() => colorForm.Hexcode) style="display:inline" />
  </label>

  <button>@ButtonText</button>
</EditForm>

@code {

  private ColorFormModel colorForm = new() {
    Name = "", Hexcode = "",
  };

  [Parameter]
  public string ButtonText {get; set; } = "Submit Color";

  [Parameter]
  public EventCallback<INewColor> OnSubmitColor { get; set; }

  private async Task doSubmitColor() {
    await OnSubmitColor.InvokeAsync(new NewColor {
      Name = colorForm.Name, Hexcode = colorForm.Hexcode
    });
  }


  class ColorFormModel {
    [Required]
    public string Name { get; set; }
    [Required]
    public string Hexcode { get; set; }
  }

}