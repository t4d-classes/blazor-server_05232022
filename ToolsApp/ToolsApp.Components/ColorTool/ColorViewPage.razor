@page "/color-view/{ColorName}/{ColorId:int?}"

@inject IColorsData colorsData

<h2>Color Data</h2>

@if (ColorId == 0) {
  <p>No Color Specified</p>
} else {
  @if (color is null) {
    <p>Loading color data...</p>
  } else {
    <ul>
      <li>@color.Id</li>
      <li>@color.Hexcode</li>
    </ul>
  }
}

@code {

  [Parameter]
  public int ColorId { get; set; }

  [Parameter]
  public string ColorName { get; set; }

  private IColor color { get; set;}

  public async override Task SetParametersAsync(ParameterView parameters)
  {
    if (parameters.TryGetValue<int>(nameof(ColorId), out var colorId)) {
      if (colorId > 0 && colorId != ColorId) {
        Console.Write("get color: " + colorId.ToString());
        ColorId = colorId;
        color = await colorsData.One(ColorId);
        StateHasChanged();
      }
    }

    await base.SetParametersAsync(parameters);
  }

  @* protected async override Task OnParametersSetAsync()
  {
    if (ColorId > 0) {
      color = await colorsData.One(ColorId);
    }
  } *@

  protected override Task OnAfterRenderAsync(bool firstRender)
  {
    Console.WriteLine("Rendering Color View Page, First Render? " + firstRender.ToString());
    return Task.CompletedTask;

  }

}